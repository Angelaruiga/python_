{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "VIv08Ishk9Im",
        "PT28_hj0MHT8",
        "HSyJCeqtNZel",
        "6k8uli18jMGm",
        "LVEsxAD935V5"
      ],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Angelaruiga/python_/blob/main/Informaci%C3%B3n_precios_de_venta.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#CARGAMOS EL DF YA LIMPIO"
      ],
      "metadata": {
        "id": "cPwm2Ip0gWyE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import plotly.express as px\n",
        "import matplotlib.pyplot as plt\n",
        "import datetime\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "import io\n",
        "from google.colab import files"
      ],
      "metadata": {
        "id": "7XSpPHGegYkp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "uploaded = files.upload()"
      ],
      "metadata": {
        "id": "CzP0_PFRbRM7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 71
        },
        "outputId": "f89cd409-d56d-47a8-f0fe-6b59da471abd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-fea39858-310a-4315-9edd-de0653af053a\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-fea39858-310a-4315-9edd-de0653af053a\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving df_hosting_limpio.csv to df_hosting_limpio.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_hosting_limpio = pd.read_csv(io.BytesIO(uploaded['df_hosting_limpio.csv']))"
      ],
      "metadata": {
        "id": "knCbUvUdbUPb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Crear una nueva columna llamada 'Price/m2' con valores nulos\n",
        "df_hosting_limpio['Price/m2'] = None\n",
        "#Crear una nueva columna llamada 'm2' con valores nulos\n",
        "df_hosting_limpio['m2'] = None\n",
        "#Crear una nueva columna llamada 'Price/m2' con valores nulos\n",
        "df_hosting_limpio['sale_price'] = None\n",
        "#Mostrar el DataFrame con las nuevas columnas\n",
        "print(df_hosting_limpio.head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Lj8TCu2ZB3iZ",
        "outputId": "5068efce-4f2b-43e4-9085-ce60d441eda9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   apartment_id                               md5  \\\n",
            "0        590991  e2e1033be05d5600541d88bb9dc1c54b   \n",
            "1        814226  619eccc1d31e87cc89f678399995a9a1   \n",
            "2        759577  80d982342aeb8ab0f8f7d3df8ef9776c   \n",
            "3       1169229  3ee65889873980e46377a2920b6ad187   \n",
            "4       1444019  f5195e726d247e3d633cd23a1b2e47ef   \n",
            "\n",
            "                                  name  \\\n",
            "0  Beautiful Cheap Double NEAR BEACH!!   \n",
            "1                         Mar Bella 10   \n",
            "2  Sofa Bed with charming balcony view   \n",
            "3  SAG.FAMILIA ZONE! RENOVATED FLAT =)   \n",
            "4    Near Sagrada Familia Encants Plus   \n",
            "\n",
            "                                         description  host_id  \\\n",
            "0  We have a 3 Double Bedroom apartment 6 mins wa...  2584681   \n",
            "1  Sunny 3-bedroom apartment in the Poblenou neig...  4260952   \n",
            "2  One room, TV, Wifi, two bathrooms, kitchen, di...   690223   \n",
            "3  HELLO PEOPLE: =) On vacation? and business? Pe...   700165   \n",
            "4  Excellent and spacious New York style apartmen...   396363   \n",
            "\n",
            "                               neighborhood_overview  \\\n",
            "0                                                NaN   \n",
            "1  The apartment is located just a few minutes (o...   \n",
            "2                                                NaN   \n",
            "3                                                NaN   \n",
            "4                                                NaN   \n",
            "\n",
            "           neighbourhood_name neighbourhood_district                latitude  \\\n",
            "0                 el Poblenou             Sant Martí  41.398.769.973.996.600   \n",
            "1                 el Poblenou             Sant Martí   4.140.368.743.948.870   \n",
            "2                    Justicia                 Centro   4.042.401.453.067.040   \n",
            "3          la Sagrada Família               Eixample               4.140.938   \n",
            "4  el Camp de l'Arpa del Clot             Sant Martí   4.140.846.375.208.600   \n",
            "\n",
            "                 longitude  ... dias_reservado  rentabilidad  \\\n",
            "0    2.195.097.948.929.680  ...              0           0.0   \n",
            "1    2.207.582.165.064.930  ...            136       16320.0   \n",
            "2  -37.005.301.160.530.900  ...             22        1078.0   \n",
            "3                  217.715  ...            191       19100.0   \n",
            "4   21.805.387.174.574.700  ...             28        4088.0   \n",
            "\n",
            "   last_review_month  last_review_year    rango_precio month    year  \\\n",
            "0               11.0            2012.0    (5.0, 100.0]  11.0  2012.0   \n",
            "1                5.0            2013.0  (100.0, 200.0]   5.0  2013.0   \n",
            "2                8.0            2013.0    (5.0, 100.0]   8.0  2013.0   \n",
            "3                9.0            2013.0    (5.0, 100.0]   9.0  2013.0   \n",
            "4                6.0            2014.0  (100.0, 200.0]   6.0  2014.0   \n",
            "\n",
            "   Price/m2    m2 sale_price  \n",
            "0      None  None       None  \n",
            "1      None  None       None  \n",
            "2      None  None       None  \n",
            "3      None  None       None  \n",
            "4      None  None       None  \n",
            "\n",
            "[5 rows x 54 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#INFORMACIÓN DE BARRIOS MÁS CAROS"
      ],
      "metadata": {
        "id": "352Tk3qJgPne"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##MADRID"
      ],
      "metadata": {
        "id": "VIv08Ishk9Im"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "BARRIOS DE MADRID CON RENTABILIDAD MAYOR:\n"
      ],
      "metadata": {
        "id": "W2X2KqFXildy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Filtrar los datos para Madrid\n",
        "df_madrid = df_hosting_limpio[df_hosting_limpio['city'] == 'madrid']\n",
        "\n",
        "#Agrupar por barrio y calcular la rentabilidad media\n",
        "rentabilidad_por_barrio = df_madrid.groupby('neighbourhood_name')['rentabilidad'].mean().reset_index()\n",
        "\n",
        "#Ordenar los resultados por rentabilidad escendente\n",
        "rentabilidad_por_barrio = rentabilidad_por_barrio.sort_values(by='rentabilidad', ascending=False)\n",
        "\n",
        "#Mostrar los barrios más rentables de Madrid\n",
        "print(rentabilidad_por_barrio.head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NSkV7VVD_n1L",
        "outputId": "b923dc9a-dd0f-4d0e-aa75-5743ff711cc3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               neighbourhood_name  rentabilidad\n",
            "24   Casco Histórico de Vicálvaro  53189.666667\n",
            "20                     Canillejas  46559.250000\n",
            "35                    Costillares  41551.666667\n",
            "95                     San Andrés  35187.000000\n",
            "108                  Valdefuentes  29878.142857\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "3mdjKpXOI24c"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Casco Histórico de Vicálvaro"
      ],
      "metadata": {
        "id": "puhBjMQlCcdw"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/madrid-capital/casco-historico-de-vicalvaro"
      ],
      "metadata": {
        "id": "mFYGoc7AI1Uc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 1866€ para los alojamientos específicos\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Casco Histórico de Vicálvaro') & (df_hosting_limpio['bedrooms'] == 1), 'Price/m2'] = 1866\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 2298€ para los alojamientos específicos\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Casco Histórico de Vicálvaro') & (df_hosting_limpio['bedrooms'] == 2), 'Price/m2'] = 2298\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 2343€ para los alojamientos específicos\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Casco Histórico de Vicálvaro') & (df_hosting_limpio['bedrooms'] == 3), 'Price/m2'] = 2343\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 2423€ para los alojamientos específicos\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Casco Histórico de Vicálvaro') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 2423\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 69m2 para los alojamientos de mas de Vicalvaro\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Casco Histórico de Vicálvaro'),'m2'] = 69\n"
      ],
      "metadata": {
        "id": "FKD_NFIcIaOB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Canillejas"
      ],
      "metadata": {
        "id": "xI2PtLRqFMYS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/madrid-capital/canillejas"
      ],
      "metadata": {
        "id": "0eP6udL_JBuv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 3477€ para los alojamientos de 1 habitación en Canillejas\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Canillejas') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 3477\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 2990€ para los alojamientos de 2 habitaciones en Canillejas\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Canillejas') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 2990\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 2646€ para los alojamientos de 3 habitaciones en Canillejas\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Canillejas') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 2646\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 2864€ para los alojamientos de mas de 3 habitaciones en Canillejas\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Canillejas') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 2864\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 74m2 para los alojamientos de mas de Canillejas\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Canillejas'),'m2'] = 74\n"
      ],
      "metadata": {
        "id": "Rh642ZacI5ma"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Costillares"
      ],
      "metadata": {
        "id": "YFN2__hyGfcT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/madrid-capital/costillares"
      ],
      "metadata": {
        "id": "reSKcl6jJM0H"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 7547€ para los alojamientos de 1 habitaciones en Costillares\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Costillares') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 7547\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 5756€ para los alojamientos de 2 habitaciones en Costillares\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Costillares') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 5756\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 4299€ para los alojamientos de 3 habitaciones en Costillares\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Costillares') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 4299\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 4456€ para los alojamientos de mas de 3 habitaciones en Costillares\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Costillares') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 4456\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 184m2 para los alojamientos de mas de Costillares\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Costillares'),'m2'] = 184\n"
      ],
      "metadata": {
        "id": "vqY5zbzNJJP2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Valdefuentes"
      ],
      "metadata": {
        "id": "uDA8nDugHKQx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/madrid-capital/valdebebas-valdefuentes"
      ],
      "metadata": {
        "id": "LsXYik3-JdZD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 4547€ para los alojamientos de Valdefuentes (no tenemos información por número de habitaciones, solo un precio medio de 4547 del barrio)\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Valdefuentes'), 'Price/m2'] = 4547\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 140m2 para los alojamientos de mas de Valdefuentes\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Valdefuentes'),'m2'] = 140\n"
      ],
      "metadata": {
        "id": "AvK5-bWuJh5i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Colina"
      ],
      "metadata": {
        "id": "YieuZBk4HtAF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/madrid-capital/colina"
      ],
      "metadata": {
        "id": "urdrGW1kJt6X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 5038€ para los alojamientos de 1 habitaciones en Colina\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Colina') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 5038\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 4932€ para los alojamientos de 2 habitaciones en Colina\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Colina') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 4932\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 4117€ para los alojamientos de 3 habitaciones en Colina\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Colina') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 4117\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 4593€ para los alojamientos de mas de 3 habitaciones en Colina\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Colina') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 4456\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 244m2 para los alojamientos de mas de Valdefuentes\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Colina'),'m2'] = 244\n"
      ],
      "metadata": {
        "id": "yMfDwauHJurd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Cálculo total de sale_price"
      ],
      "metadata": {
        "id": "ez3hVRJkL_pQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Calcular la columna 'sale_price' para Madrid\n",
        "df_hosting_limpio['sale_price'] = df_hosting_limpio['Price/m2'] * df_hosting_limpio['m2']\n",
        "\n",
        "#Mostrar los resultados\n",
        "print(df_hosting_limpio[['neighbourhood_name', 'room_type', 'Price/m2', 'm2', 'sale_price']])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X4QJMHe3KL6c",
        "outputId": "b41eafae-8d3b-42c0-e1b0-a30b131f368f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              neighbourhood_name        room_type Price/m2    m2 sale_price\n",
            "0                    el Poblenou     Private room     None  None        NaN\n",
            "1                    el Poblenou  Entire home/apt     None  None        NaN\n",
            "2                       Justicia     Private room     None  None        NaN\n",
            "3             la Sagrada Família     Private room     None  None        NaN\n",
            "4     el Camp de l'Arpa del Clot  Entire home/apt     None  None        NaN\n",
            "...                          ...              ...      ...   ...        ...\n",
            "8791      Sant Gervasi - Galvany     Private room     None  None        NaN\n",
            "8792                 LA GRAN VIA     Private room     None  None        NaN\n",
            "8793             Palos de Moguer  Entire home/apt     None  None        NaN\n",
            "8794                    Felanitx  Entire home/apt     None  None        NaN\n",
            "8795                    Can Baró     Private room     None  None        NaN\n",
            "\n",
            "[8796 rows x 5 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Lista de los barrios especificos\n",
        "barrios_especificos_madrid = ['Centro Histórico de Vicálvaro', 'Canillejas', 'Costillares', 'Valdefuentes', 'Colina']\n",
        "\n",
        "#Filtrar el DataFrame para incluir solo los barrios especificados de Madrid\n",
        "df_madrid_especificos = df_hosting_limpio[(df_hosting_limpio['city'] == 'madrid') & (df_hosting_limpio['neighbourhood_name'].isin(barrios_especificos_madrid))]\n",
        "\n",
        "#Calcular la columna 'sale_price' para los barrios especificados\n",
        "df_madrid_especificos['sale_price'] = df_madrid_especificos['Price/m2'] * df_madrid_especificos['m2']\n",
        "\n",
        "#Mostrar los resultados\n",
        "print(df_madrid_especificos[['neighbourhood_name', 'room_type', 'Price/m2', 'm2', 'sale_price']])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ruSyh1XsKc-t",
        "outputId": "f68cf967-7367-441a-c95e-08c2320da035"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     neighbourhood_name        room_type Price/m2   m2 sale_price\n",
            "474        Valdefuentes     Private room     4547  140     636580\n",
            "1634       Valdefuentes     Private room     4547  140     636580\n",
            "1848             Colina  Entire home/apt     4932  244    1203408\n",
            "2824         Canillejas  Entire home/apt     3477   74     257298\n",
            "3555        Costillares     Private room     7547  184    1388648\n",
            "4531       Valdefuentes  Entire home/apt     4547  140     636580\n",
            "5443       Valdefuentes     Private room     4547  140     636580\n",
            "5461         Canillejas     Private room     3477   74     257298\n",
            "5524         Canillejas  Entire home/apt     2990   74     221260\n",
            "5552       Valdefuentes  Entire home/apt     4547  140     636580\n",
            "5851       Valdefuentes     Private room     4547  140     636580\n",
            "7776         Canillejas     Private room     2990   74     221260\n",
            "7952        Costillares     Private room     7547  184    1388648\n",
            "8350       Valdefuentes     Private room     4547  140     636580\n",
            "8761        Costillares  Entire home/apt     5756  184    1059104\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##VALENCIA"
      ],
      "metadata": {
        "id": "v-dqCSO8LvP6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Filtrar los datos para Valencia\n",
        "df_valencia = df_hosting_limpio[df_hosting_limpio['city'] == 'valencia']\n",
        "\n",
        "#Agrupar por barrio y calcular la rentabilidad media\n",
        "rentabilidad_por_barrio = df_valencia.groupby('neighbourhood_name')['rentabilidad'].mean().reset_index()\n",
        "\n",
        "#Ordenar los resultados por rentabilidad escendente\n",
        "rentabilidad_por_barrio = rentabilidad_por_barrio.sort_values(by='rentabilidad', ascending=False)\n",
        "\n",
        "#Mostrar los barrios más rentables de Valencia\n",
        "print(rentabilidad_por_barrio.head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J60zT6-oLz98",
        "outputId": "526538d3-e099-4b2a-e188-d1270b97c8d1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   neighbourhood_name  rentabilidad\n",
            "59     SANT MARCEL.LI  32120.000000\n",
            "60           SANT PAU  29565.000000\n",
            "29          L'AMISTAT  25978.333333\n",
            "64       TRES FORQUES  23527.500000\n",
            "25          EXPOSICIO  20995.666667\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El apostofre de L ' AMISTAT nos va a perjudicar, asi que voy a reemplazar el apóstrofe en la columna neighbourhood_name para la ciudad Valencia\n",
        "df_valencia['neighbourhood_name'] = df_valencia['neighbourhood_name'].str.replace(\"'\", \"\")\n"
      ],
      "metadata": {
        "id": "kpcinzgiuILC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Obtener los valores únicos de la columna neighbourhood_name\n",
        "valores_unicos = df_valencia['neighbourhood_name'].unique()\n",
        "\n",
        "#Imprimir los valores únicos\n",
        "print(valores_unicos)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "odF1J_fIuThN",
        "outputId": "5357b509-2ec9-4ca6-8333-613f87f2308e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['EL CALVARI' 'RUSSAFA' 'LA RAIOSA' 'SANT FRANCESC' 'EL PERELLONET'\n",
            " 'AIORA' 'MORVEDRE' 'LA SEU' 'TORMOS' 'EL PLA DEL REMEI' 'LA ROQUETA'\n",
            " 'EL MERCAT' 'ARRANCAPINS' 'CABANYAL-CANYAMELAR' 'CIUTAT JARDI'\n",
            " 'LA MALVA-ROSA' 'EL PILAR' 'LAMISTAT' 'NOU MOLES' 'EL BOTANIC'\n",
            " 'JAUME ROIG' 'EL CARME' 'LA CREU DEL GRAU' 'MESTALLA' 'FAITANAR'\n",
            " 'EN CORTS' 'BETERO' 'LA XEREA' 'NA ROVELLA' 'BENIMACLET' 'PENYA-ROJA'\n",
            " 'LES TENDETES' 'MARXALENES' 'BENICALAP' 'VARA DE QUART' 'NATZARET'\n",
            " 'ELS ORRIOLS' 'TORREFIEL' 'MONT-OLIVET' 'SOTERNES' 'LA VEGA BAIXA'\n",
            " 'ALBORS' 'TRES FORQUES' 'SANT ANTONI' 'SANT LLORENS' 'LA GRAN VIA'\n",
            " 'LILLA PERDUDA' 'EL GRAU' 'SANT PAU' 'LA CARRASCA' 'LA PETXINA'\n",
            " 'SANT MARCEL.LI' 'CIUTAT DE LES ARTS I DE LES CIENCIES' 'CAMPANAR'\n",
            " 'EL SALER' 'CIUTAT UNIVERSITARIA' 'FAVARA' 'PATRAIX' 'CAMI FONDO'\n",
            " 'MALILLA' 'LHORT DE SENABRE' 'CIUTAT FALLERA' 'BENIMAMET' 'MASSARROJOS'\n",
            " 'EXPOSICIO' 'TRINITAT' 'LA CREU COBERTA']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###SANT MARCEL.LI"
      ],
      "metadata": {
        "id": "PT28_hj0MHT8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/valencia-capital/sant-marcelli"
      ],
      "metadata": {
        "id": "wfhxpNzJMK4_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 2768€ para los alojamientos de 1 habitaciones en SANT MARCEL.LI\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT MARCEL.LI') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 2768\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 1466€ para los alojamientos de 2 habitaciones en SANT MARCEL.LI\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT MARCEL.LI') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 1466\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 1773€ para los alojamientos de 3 habitaciones en SANT MARCEL.LI\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT MARCEL.LI') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 1773\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 1692€ para los alojamientos de mas de 3 habitaciones en SANT MARCEL.LI\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT MARCEL.LI') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 1692\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 99m2 para los alojamientos de mas de SANT MARCEL.LI\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT MARCEL.LI'),'m2'] = 99\n"
      ],
      "metadata": {
        "id": "1Ns9QyTBMz-i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###SANT PAU"
      ],
      "metadata": {
        "id": "HSyJCeqtNZel"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/valencia-capital/sant-pau"
      ],
      "metadata": {
        "id": "m0u31cjoNcRj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 7667€ para los alojamientos de 1 habitaciones en SANT PAU\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT PAU') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 7667\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 4015€ para los alojamientos de 2 habitaciones en SANT PAU\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT PAU') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 4015\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 3552€ para los alojamientos de  habitaciones en SANT PAU\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT PAU') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 3552\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 3767€ para los alojamientos de 3 o mas habitaciones en SANT PAU\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT PAU') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 3767\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 110m2 para los alojamientos de mas de SANT PAU\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'SANT PAU'),'m2'] = 110\n"
      ],
      "metadata": {
        "id": "vvCh9eWFh49g"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###L'AMISTAT"
      ],
      "metadata": {
        "id": "wVkFQUfhiBuE"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/valencia-capital/l-amistat"
      ],
      "metadata": {
        "id": "4FjA1-xyiL7L"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 2476€ para los alojamientos de L'AMISTAT (no tenemos información por número de habitaciones, solo un precio medio de 2476 del barrio)\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'LAMISTAT'), 'Price/m2'] = 2476\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 132m2 para los alojamientos de mas de L'AMISTAT\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'LAMISTAT'),'m2'] = 132\n"
      ],
      "metadata": {
        "id": "dLKO0kLeiuIQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###TRES FORQUES"
      ],
      "metadata": {
        "id": "6k8uli18jMGm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/valencia-capital/tres-forques"
      ],
      "metadata": {
        "id": "iUu_97GjjZh9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 1348€ para los alojamientos de 1 habitaciones en TRES FORQUES\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'TRES FORQUES') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 1348\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 1379€ para los alojamientos de 2 habitaciones en TRES FORQUES\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'TRES FORQUES') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 1379\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 3552€ para los alojamientos de  habitaciones en TRES FORQUES\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'TRES FORQUES') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 1608\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 1648€ para los alojamientos de 3 o mas habitaciones en TRES FORQUES\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'TRES FORQUES') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 1648\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 45m2 para los alojamientos de mas de TRES FORQUES\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'TRES FORQUES'),'m2'] = 45\n"
      ],
      "metadata": {
        "id": "vzPlZj8_3uuz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###EXPOSICIO"
      ],
      "metadata": {
        "id": "LVEsxAD935V5"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/valencia-capital/exposicio"
      ],
      "metadata": {
        "id": "IIzPHHSk4L7X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 4490€ para los alojamientos de 1 o 2 habitaciones en EXPOSICIO porque no tenemos dato para los de 2 habitaciones, ponemos el precio de 1 habitacion\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'EXPOSICIO') & (df_hosting_limpio['bedrooms'] <=2), 'Price/m2'] = 3580\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 3811€ para los alojamientos de  habitaciones en EXPOSICIO\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'EXPOSICIO') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 3811\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 1648€ para los alojamientos de 3 o mas habitaciones en EXPOSICIO\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'EXPOSICIO') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 4175\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 185m2 para los alojamientos de mas de EXPOSICIO\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'EXPOSICIO'),'m2'] = 185\n"
      ],
      "metadata": {
        "id": "DhaSeTXK5RYW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###CALCULO TOTAL DE SALE PRICE"
      ],
      "metadata": {
        "id": "tGBxP8yUaPm1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Calcular la columna 'sale_price' para VALENCIA\n",
        "df_hosting_limpio['sale_price'] = df_hosting_limpio['Price/m2'] * df_hosting_limpio['m2']\n",
        "\n",
        "#Mostrar los resultados\n",
        "print(df_hosting_limpio[['neighbourhood_name', 'room_type', 'Price/m2', 'm2', 'sale_price']])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DbrKmH3OaR9E",
        "outputId": "a733c97d-a302-4388-d1c3-1b218612ea4a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              neighbourhood_name        room_type Price/m2    m2 sale_price\n",
            "0                    el Poblenou     Private room     None  None        NaN\n",
            "1                    el Poblenou  Entire home/apt     None  None        NaN\n",
            "2                       Justicia     Private room     None  None        NaN\n",
            "3             la Sagrada Família     Private room     None  None        NaN\n",
            "4     el Camp de l'Arpa del Clot  Entire home/apt     None  None        NaN\n",
            "...                          ...              ...      ...   ...        ...\n",
            "8791      Sant Gervasi - Galvany     Private room     None  None        NaN\n",
            "8792                 LA GRAN VIA     Private room     None  None        NaN\n",
            "8793             Palos de Moguer  Entire home/apt     None  None        NaN\n",
            "8794                    Felanitx  Entire home/apt     None  None        NaN\n",
            "8795                    Can Baró     Private room     None  None        NaN\n",
            "\n",
            "[8796 rows x 5 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Lista de los barrios específicos\n",
        "barrios_especificos_vlc = ['SANT MARCEL.LI', 'SANT PAU', 'TRES FORQUES', 'EXPOSICIO', 'LAMISTAT']\n",
        "\n",
        "#Filtrar el DataFrame para incluir solo los barrios especificados de Madrid\n",
        "df_valencia_especificos = df_hosting_limpio[(df_hosting_limpio['city'] == 'valencia') & (df_hosting_limpio['neighbourhood_name'].isin(barrios_especificos_vlc))]\n",
        "\n",
        "#Calcular la columna 'sale_price' para los barrios especificados\n",
        "df_valencia_especificos['sale_price'] = df_valencia_especificos['Price/m2'] * df_valencia_especificos['m2']\n",
        "\n",
        "#Mostrar los resultados\n",
        "print(df_valencia_especificos[['neighbourhood_name', 'room_type', 'Price/m2', 'm2', 'sale_price']])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VaKPLPGpaT0b",
        "outputId": "ee63623e-4363-476f-e159-c56bb4167ca8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     neighbourhood_name        room_type Price/m2   m2 sale_price\n",
            "3505       TRES FORQUES  Entire home/apt     1379   45      62055\n",
            "4007       TRES FORQUES     Private room     1348   45      60660\n",
            "4144           SANT PAU  Entire home/apt     7667  110     843370\n",
            "4345     SANT MARCEL.LI  Entire home/apt     1466   99     145134\n",
            "4430       TRES FORQUES  Entire home/apt     1379   45      62055\n",
            "6359          EXPOSICIO  Entire home/apt     3811  185     705035\n",
            "6620          EXPOSICIO  Entire home/apt     3580  185     662300\n",
            "7836          EXPOSICIO  Entire home/apt     3811  185     705035\n",
            "8747       TRES FORQUES  Entire home/apt     1608   45      72360\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##BARCELONA"
      ],
      "metadata": {
        "id": "h2aePtvd7QB5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Filtrar los datos para Barcelona\n",
        "df_barcelona = df_hosting_limpio[df_hosting_limpio['city'] == 'barcelona']\n",
        "\n",
        "#Agrupar por barrio y calcular la rentabilidad media\n",
        "rentabilidad_por_barrio = df_barcelona.groupby('neighbourhood_name')['rentabilidad'].mean().reset_index()\n",
        "\n",
        "#Ordenar los resultados por rentabilidad escendente\n",
        "rentabilidad_por_barrio = rentabilidad_por_barrio.sort_values(by='rentabilidad', ascending=False)\n",
        "\n",
        "#Mostrar los barrios más rentables de Barcelona\n",
        "print(rentabilidad_por_barrio.head(5))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HEoJeYvT7UKH",
        "outputId": "0afa666f-1272-4271-f07e-66eb1f96914d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               neighbourhood_name  rentabilidad\n",
            "8                       Pedralbes  32685.000000\n",
            "65  la Vila Olímpica del Poblenou  28241.750000\n",
            "15     Sant Gervasi - la Bonanova  21472.111111\n",
            "67                      les Corts  20497.576923\n",
            "5                     Hostafrancs  20474.333333\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###HOSTAFRANCS"
      ],
      "metadata": {
        "id": "JRpAyHH376ay"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/barcelona-capital/hostafrancs"
      ],
      "metadata": {
        "id": "EquYtR4Q7-uD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 3841€ para los alojamientos de 1 habitaciones en Hostafrancs\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Hostafrancs') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 3841\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 4955€ para los alojamientos de 2 habitaciones en Hostafrancs\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Hostafrancs') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 4955\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 3475€ para los alojamientos de  habitaciones en Hostafrancs\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Hostafrancs') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 3475\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 3521€ para los alojamientos de 3 o mas habitaciones en Hostafrancs\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Hostafrancs') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 3521\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 73m2 para los alojamientos de mas de Hostafrancs\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Hostafrancs'),'m2'] = 73\n"
      ],
      "metadata": {
        "id": "DihJHsTa8AeX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###la Vila Olímpica del Poblenou"
      ],
      "metadata": {
        "id": "2E5gzaIRx0Kb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/barcelona-capital/la-vila-olimpica-del-poblenou"
      ],
      "metadata": {
        "id": "QYYS9QoQx2E1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 4176€ para los alojamientos de 1 habitaciones en la Vila Olímpica del Poblenou\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'la Vila Olímpica del Poblenou') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 6176\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 6200€ para los alojamientos de 2 habitaciones en la Vila Olímpica del Poblenou\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'la Vila Olímpica del Poblenou') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 6200\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 5937€ para los alojamientos de  habitaciones en la Vila Olímpica del Poblenou\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'la Vila Olímpica del Poblenou') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 5937\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 4895€ para los alojamientos de 3 o mas habitaciones en la Vila Olímpica del Poblenou\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'la Vila Olímpica del Poblenou') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 4895\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 190m2 para los alojamientos de mas de la Vila Olímpica del Poblenou\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'la Vila Olímpica del Poblenou'),'m2'] = 190\n"
      ],
      "metadata": {
        "id": "JgQSOPJHx68i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Pedralbes"
      ],
      "metadata": {
        "id": "85QauI7Qy-Ju"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/barcelona-capital/pedralbes"
      ],
      "metadata": {
        "id": "St-nmGTsy_Xr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 7161€ para los alojamientos de 1 habitaciones en Pedralbes\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Pedralbes') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 7161\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 7974€ para los alojamientos de 2 habitaciones en Pedralbes\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Pedralbes') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 7974\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 6264€ para los alojamientos de  habitaciones en Pedralbes\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Pedralbes') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 6264\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 6457€ para los alojamientos de 3 o mas habitaciones en Pedralbes\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Pedralbes') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 6457\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 85m2 para los alojamientos de mas de Pedralbes\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Pedralbes'),'m2'] = 85\n"
      ],
      "metadata": {
        "id": "TNudi7ylzBPB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Sant Gervasi - la Bonanova\n"
      ],
      "metadata": {
        "id": "B8vbS_Xc0lQY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/barcelona-capital/sant-gervasi-i-la-bonanova"
      ],
      "metadata": {
        "id": "qDOEtd1x0q3M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 6636€ para los alojamientos de 1 habitaciones en Sant Gervasi - la Bonanova\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Sant Gervasi - la Bonanova') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 6636\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 6349€ para los alojamientos de 2 habitaciones en Sant Gervasi - la Bonanova\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Sant Gervasi - la Bonanova') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 6349\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 6405€ para los alojamientos de  habitaciones en Sant Gervasi - la Bonanova\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Sant Gervasi - la Bonanova') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 6405\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 5297€ para los alojamientos de 3 o mas habitaciones en Sant Gervasi - la Bonanova\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Sant Gervasi - la Bonanova') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 5297\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 245m2 para los alojamientos de mas de Sant Gervasi - la Bonanova\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'Sant Gervasi - la Bonanova'),'m2'] = 245\n"
      ],
      "metadata": {
        "id": "-kXYmvj8004s"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###les Corts"
      ],
      "metadata": {
        "id": "sJ_5KbHp1Wqf"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.fotocasa.es/indice-precio-vivienda/barcelona-capital/les-corts"
      ],
      "metadata": {
        "id": "OYdOrSa51X-G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Rellenar la columna 'Price/m2' con el valor 5356€ para los alojamientos de 1 habitaciones en les Corts\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'les Corts') & (df_hosting_limpio['bedrooms'] ==1), 'Price/m2'] = 5356\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 5127€ para los alojamientos de 2 habitaciones en les Corts\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'les Corts') & (df_hosting_limpio['bedrooms'] ==2), 'Price/m2'] = 5127\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 5001€ para los alojamientos de  habitaciones en les Corts\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'les Corts') & (df_hosting_limpio['bedrooms'] ==3), 'Price/m2'] = 5001\n",
        "\n",
        "#Rellenar la columna 'Price/m2' con el valor 5081€ para los alojamientos de 3 o mas habitaciones en les Corts\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'les Corts') & (df_hosting_limpio['bedrooms'] >3), 'Price/m2'] = 5081\n",
        "\n",
        "#Rellenar la columna 'm2' con el valor 71m2 para los alojamientos de mas de les Corts\n",
        "df_hosting_limpio.loc[(df_hosting_limpio['neighbourhood_name'] == 'les Corts'),'m2'] = 71\n"
      ],
      "metadata": {
        "id": "4EMKprpc1Zfn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "###CALCULO TOTAL DE SALE_PRICE"
      ],
      "metadata": {
        "id": "fmEdl31IaxHQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Calcular la columna 'sale_price' para BARCELONA\n",
        "df_hosting_limpio['sale_price'] = df_hosting_limpio['Price/m2'] * df_hosting_limpio['m2']\n",
        "\n",
        "#Mostrar los resultados\n",
        "print(df_hosting_limpio[['neighbourhood_name', 'room_type', 'Price/m2', 'm2', 'sale_price']])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Uvegqc0ra0Tp",
        "outputId": "30024d37-d7b5-4d5a-83ef-729f354f9f61"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              neighbourhood_name        room_type Price/m2    m2 sale_price\n",
            "0                    el Poblenou     Private room     None  None        NaN\n",
            "1                    el Poblenou  Entire home/apt     None  None        NaN\n",
            "2                       Justicia     Private room     None  None        NaN\n",
            "3             la Sagrada Família     Private room     None  None        NaN\n",
            "4     el Camp de l'Arpa del Clot  Entire home/apt     None  None        NaN\n",
            "...                          ...              ...      ...   ...        ...\n",
            "8791      Sant Gervasi - Galvany     Private room     None  None        NaN\n",
            "8792                 LA GRAN VIA     Private room     None  None        NaN\n",
            "8793             Palos de Moguer  Entire home/apt     None  None        NaN\n",
            "8794                    Felanitx  Entire home/apt     None  None        NaN\n",
            "8795                    Can Baró     Private room     None  None        NaN\n",
            "\n",
            "[8796 rows x 5 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Lista de los barrios específicos\n",
        "barrios_especificos_bcn = ['Pedralbes', 'la Vila Olímpica del Poblenou', 'Sant Gervasi - la Bonanova ', 'les Corts ', ' Hostafrancs ']\n",
        "\n",
        "#Filtrar el DataFrame para incluir solo los barrios especificados de Madrid\n",
        "df_barcelona_especificos = df_hosting_limpio[(df_hosting_limpio['city'] == 'barcelona') & (df_hosting_limpio['neighbourhood_name'].isin(barrios_especificos_bcn))]\n",
        "\n",
        "#Calcular la columna 'sale_price' para los barrios especificados\n",
        "df_barcelona_especificos['sale_price'] = df_barcelona_especificos['Price/m2'] * df_barcelona_especificos['m2']\n",
        "\n",
        "#Mostrar los resultados\n",
        "print(df_barcelona_especificos[['neighbourhood_name', 'room_type', 'Price/m2', 'm2', 'sale_price']])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DlI8-jvUa2OY",
        "outputId": "eaa27f96-e9c2-4f97-b35a-b88a98597b27"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                 neighbourhood_name        room_type Price/m2   m2 sale_price\n",
            "326   la Vila Olímpica del Poblenou     Private room     6176  190    1173440\n",
            "333   la Vila Olímpica del Poblenou  Entire home/apt     6200  190    1178000\n",
            "341   la Vila Olímpica del Poblenou  Entire home/apt     5937  190    1128030\n",
            "461   la Vila Olímpica del Poblenou  Entire home/apt     6200  190    1178000\n",
            "776   la Vila Olímpica del Poblenou     Private room     6176  190    1173440\n",
            "808   la Vila Olímpica del Poblenou  Entire home/apt     5937  190    1128030\n",
            "1051  la Vila Olímpica del Poblenou  Entire home/apt     4895  190     930050\n",
            "1305  la Vila Olímpica del Poblenou  Entire home/apt     5937  190    1128030\n",
            "2769                      Pedralbes  Entire home/apt     6457   85     548845\n",
            "2974  la Vila Olímpica del Poblenou  Entire home/apt     4895  190     930050\n",
            "3415  la Vila Olímpica del Poblenou  Entire home/apt     5937  190    1128030\n",
            "3489  la Vila Olímpica del Poblenou  Entire home/apt     5937  190    1128030\n",
            "3851  la Vila Olímpica del Poblenou     Private room     6176  190    1173440\n",
            "4059  la Vila Olímpica del Poblenou     Private room     6176  190    1173440\n",
            "4610  la Vila Olímpica del Poblenou  Entire home/apt     6200  190    1178000\n",
            "4626  la Vila Olímpica del Poblenou     Private room     6176  190    1173440\n",
            "4655  la Vila Olímpica del Poblenou     Private room     6176  190    1173440\n",
            "4693                      Pedralbes     Private room     7161   85     608685\n",
            "5389  la Vila Olímpica del Poblenou     Private room     None  190        NaN\n",
            "5645  la Vila Olímpica del Poblenou  Entire home/apt     6176  190    1173440\n",
            "7328  la Vila Olímpica del Poblenou     Private room     6176  190    1173440\n",
            "8190  la Vila Olímpica del Poblenou  Entire home/apt     5937  190    1128030\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##DF CON INFORMACION"
      ],
      "metadata": {
        "id": "ChIwgogFchZm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Lista de nombres de barrios de interés\n",
        "barrios_rentables = ['Casco Histórico de Vicálvaro', 'Canillejas', 'Costillares', 'Valdefuentes', 'Colina', 'SANT MARCEL.LI', 'SANT PAU', 'LAMISTAT', 'TRES FORQUES', 'EXPOSICIO', 'Hostafrancs', 'la Vila Olímpica del Poblenou', 'Pedralbes', 'Sant Gervasi - la Bonanova', 'les Corts']\n",
        "\n",
        "#Filtrar el DataFrame\n",
        "df_barrios_rentables = df_hosting_limpio[df_hosting_limpio['neighbourhood_name'].isin(barrios_rentables)]\n",
        "\n",
        "#Seleccionar columnas especificadas\n",
        "columnas_seleccionadas = ['neighbourhood_name', 'room_type', 'Price/m2', 'm2', 'sale_price', 'city', 'apartment_id', 'latitude', 'longitude', 'bedrooms' ]\n",
        "df_barrios_rentables = df_barrios_rentables[columnas_seleccionadas]\n"
      ],
      "metadata": {
        "id": "_jva539BckE0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Guardar el DataFrame en un archivo CSV\n",
        "from google.colab import files\n",
        "df_barrios_rentables.to_csv('df_barrios_rentables.csv', index=False,encoding='utf-8')\n",
        "\n",
        "#Descargar el archivo CSV\n",
        "files.download('df_barrios_rentables.csv')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "k2PRizpsfNYa",
        "outputId": "000bc4c2-c2c9-4a6b-a756-aa39f69338e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_685a371d-688f-4560-a086-8e88cf0937a7\", \"df_barrios_rentables.csv\", 11927)"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ]
}
